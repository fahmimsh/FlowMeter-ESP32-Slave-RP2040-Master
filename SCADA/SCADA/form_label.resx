<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAACMuAAAjLgAAAAAAAAAA
        AAD/MqcA/0G7AP83rAD/PMcAAAAAAP9y/wD/sf8A/6//AP/H/wD///8A/2z/AB4MLgDhC7MA4Aa3AOIG
        twDfB7UAzhxsAs8fbgDOHWxB0h5yp34AFgb/iv8AAAAAAAAAAAAAAAAAAAAAAf///wCED2sEzRSjn84Q
        pUPOEaQAzhClAtwnfAPeLoIA3St/Vd0ngP/NF2Sc0CNxis8gbo7OIGyOzR9qjsweZ4/JHF+MxxVgm9MP
        p//aDrVZ2Q21ANgPsQPdL4EB3jGDANwzgBzfLob2zBNdrsoVWXzNGGCDyxdef8oYXX7IGF5/wBdHdcYR
        dqHXDrH35hTEIOUSxgDfErsB4DaGAOA9kQHnQ50A4juNr9Iea//CEE11yhpdfcgYWITIGVyFxRhVgbsU
        QXzNDZf/4BTAs9YEuQDJAJkB5BvEAOYdhgDgOIYC5kiUAOVMkiPbLn3wvgpH57oJPorED1OAxBNTgb4V
        R4vHC4fk4RnE9u8y0inuLNMA5yPKAuIKvwAAAAAA4SqFANsvegPgOYMA3j2ARdIfZv+/DErRqQsolb4L
        SpXRDKHN5CHH//BC2UrtLdMA5yLKA94AuAAAAAAAAAAAAN8siwDeGnEA2iptA+A4awDhQ3ouzR5X3MEJ
        X/vZFLL66y3U4vxe8TX9P/wA6xvXAtMAsADTAKIAAAAAAAAAAADZFrAA1A2wAMwJqQKfAIkAAAAAANEO
        qK/nIs7/4Cem/8EVXLQAAAACkAAAAMATTwLIGFgA1B16AAAAAAAAAAAAzwynAMoJoQK6AIoAqgN2HdYP
        st/sKtXw9D/doOAirp7UGYXrxg9S4qQFMR65DUMAwxFRAs0VYAAAAAAAvwCOAMcOnQGuAHkAoQVnD9kR
        udTxM9798zPXpusexX3vKNZ85im0nNQahvrNF3DXtgslEL0PNwDEElcBxhFdAMkToADyFN4C6wzUANsP
        u5bvLNv/9DLXkO4dy4PtI8yM6SHEiOggy3jnKMR71Bt7/8sYbZjQGHcA1ByBAsUXYQDhFcIB1QCtANAA
        oxXtI9jz9TjisvAk1HnwJ9WE7iXSgOwlz3/qJMiC6STMd+AmqrDXH3/zxhFXGMkUWwDOGWwB7SfXA+0m
        1wDrItRU9D7l//Iz2abwKdOP7yrSku0pzo/rKcuN6SnHjegqxYbkK7qa3imT/9MecFXVH3IA1SB5A/RH
        5gL1UecA9EnmRvde66/+fP8M////BP/S/wf/6f8F//j/Bf/4/wX///8C/9v/COVAl6rcNIdE3TSIAN03
        iQLnAMoA5gTHAOYAyADqA9AA/7L/AP///wD///8A////AP///wD///8A////AP///wDjO5QAvgA3AL4A
        NQDGAEkA//8AAEeiAABAAgAAQAIAAKAFAACgBQAA0AsAAOgXAADsFwAA0AsAAKAFAACgBQAAQAIAAEAC
        AABAAgAA//8AAA==
</value>
  </data>
</root>